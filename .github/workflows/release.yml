name: Release

on:
  push:
    tags:
      - 'v*.*.*'  
  workflow_dispatch:    

permissions:
  contents: write     

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 40

    env:
      ELECTRON_MIRROR: https://npmmirror.com/mirrors/electron/
      ELECTRON_CACHE: $RUNNER_TEMP\.cache\electron
      ELECTRON_BUILDER_CACHE: $RUNNER_TEMP\.cache\electron-builder
      APP_BUILDER_CACHE: $RUNNER_TEMP\.cache\app-builder
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug ref
        run: |
          echo "ref=$env:GITHUB_REF"
          echo "ref_type=$env:GITHUB_REF_TYPE"
          echo "ref_name=$env:GITHUB_REF_NAME"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache Electron artifacts
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.ELECTRON_CACHE }}
            ${{ env.ELECTRON_BUILDER_CACHE }}
            ${{ env.APP_BUILDER_CACHE }}
          key: ${{ runner.os }}-electron-cache-${{ hashFiles('package-lock.json') }}

      - name: Install deps
        run: |
          if (Test-Path "package-lock.json") { npm ci } else { npm install }

      - name: Build (no publish)
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          timeout_minutes: 25
          command: npm run dist -- -w --publish never
        env:
          ELECTRON_MIRROR: ${{ env.ELECTRON_MIRROR }}
          ELECTRON_CACHE: ${{ env.ELECTRON_CACHE }}
          ELECTRON_BUILDER_CACHE: ${{ env.ELECTRON_BUILDER_CACHE }}
          APP_BUILDER_CACHE: ${{ env.APP_BUILDER_CACHE }}

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}     
          draft: false
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            dist/*.exe
            dist/*.yml
            dist/*.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
